<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="Office" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="Microsoft.Office.Core" #>
<#@ import namespace="System.Linq" #>

namespace Office.Contrib.Extensions
{
	/// <summary>
	/// Provides cleanup extension methods for interfaces exposed by Office.dll
	/// </summary>
	public static class OfficeCleanupExtensions
	{
<# 
	foreach (var officeInterface in typeof(Microsoft.Office.Core.COMAddIn).Assembly.GetTypes().Where(t => t.IsInterface)) 
	{
#>
		/// <summary>
		/// Wrapper interface for <#= officeInterface.Name #> which adds IDispose to the interface
		/// </summary>
		public static Interfaces.I<#= officeInterface.Name #> WithComCleanup(this <#= officeInterface.FullName #> resource)
		{
			return resource.WithComCleanup<<#= officeInterface.FullName #>, Interfaces.I<#= officeInterface.Name #>>();
		}

<#
		}
#>
	}
}