<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Microsoft.Office.Interop.Outlook" #>
<#@ import namespace="System.Linq" #>
using Office.Contrib.Extensions;

namespace Office.Outlook.Contrib.Extensions
{
	/// <summary>
	/// Provides cleanup extension methods for interfaces exposed by Microsoft.Office.Interop.Outlook.dll
	/// </summary>
	public static class OutlookCleanupExtensions
	{
<# 
	foreach (var outlookInterface in typeof(Microsoft.Office.Interop.Outlook.Application).Assembly.GetTypes().Where(t => t.IsInterface))
	{
#>
		/// <summary>
		/// Wrapper interface for <#= outlookInterface.Name #> which adds IDispose to the interface
		/// </summary>
		public static Interfaces.I<#= outlookInterface.Name #> WithComCleanup(this <#= outlookInterface.FullName #> resource)
		{
			return resource.WithComCleanup<<#= outlookInterface.FullName #>, Interfaces.I<#= outlookInterface.Name #>>();
		}

<# 
	} 
#>
	}
}