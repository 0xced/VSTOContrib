<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#
var programFiles = Environment.GetEnvironmentVariable("PROGRAMFILES(X86)") ?? Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles);
Assembly officeAssembly = Assembly.ReflectionOnlyLoadFrom (programFiles + @"\Microsoft Visual Studio 10.0\Visual Studio Tools for Office\PIA\Office14\Office.dll");
Assembly outlookAssembly = Assembly.ReflectionOnlyLoadFrom(programFiles + @"\Microsoft Visual Studio 10.0\Visual Studio Tools for Office\PIA\Office14\Microsoft.Office.Interop.Outlook.dll");
#>
//<#=outlookAssembly.FullName#>
namespace Office.Outlook.Contrib.Interfaces
{
<# 
foreach (var outlookInterface in outlookAssembly.GetTypes().Where(t => t.IsInterface)) 
{ 
#>
	/// <summary>
	/// Wrapper interface for <#= outlookInterface.Name #> which adds IDispose to the interface
	/// </summary>
	public interface I<#= outlookInterface.Name #> : <#= outlookInterface.FullName #>, System.IDisposable 
	{ 
		/// <summary>
        /// Gets the proxied resource.
        /// </summary>
        /// <value>The resource.</value>
		<#= outlookInterface.FullName #> Resource { get; }
	}

<#
}
#>
}